name: WD MyCloud package CI

# Run via workflow_dispatch or after merging to main
on:
  push:
    branches:
      - main
    paths:
      - 'wdpk/**'
  workflow_dispatch:
    inputs:
      packages:
        description: 'Packages to build'
        required: false
        default: 'docker'

jobs:
  prepare: 
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-matrix.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'push'
        with:
          fetch-depth: 0
          
      - id: set-matrix
        if: github.event_name == 'push'
        run: |
          # get all changed directories in wdpk/**/
          pkg=$(git diff --name-only HEAD~1 HEAD | grep -oP 'wdpk/\K[^/]+(?=/)' | sort -u | uniq)
          
          # make JSON array from pkg list
          pkgs=$(echo $pkg | sed 's/ /","/g')
          
          echo "Packages: ${pkgs}"
          echo "packages=[${pkgs}]" >> $GITHUB_OUTPUT
        
      - id: set-from-input
        if: github.event_name == 'workflow_dispatch'
        run: |
          # turn workflow dispatch input into JSON array
          pkgs=$(echo ${{ github.event.inputs.packages }} | sed 's/ /","/g')
          echo "Packages: ${pkgs}"
          echo "packages=[$pkgs]" >> $GITHUB_OUTPUT
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: prepare
    if: needs.prepare.outputs.matrix != ''
    container:
      image: wdpk/wdpk
      options: -v ${{github.workspace}}/packages:/github/workspace/packages

    # define all the OS5 supporting platforms and a prettier name
    strategy:
      matrix:
        model: [EX4100, DL4100, EX2100, DL2100, MirrorG2, Ex2Ultra, PR4100, PR2100]
        packages: ${{fromJson(needs.prepare.outputs.packages)}}
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      - name: Make APKG packages for selected platforms
        id: make_apkg
        env:
          MODEL: ${{ matrix.model }}
          PACKAGE: ${{ matrix.packages }}
        run: |
          declare -A PACKAGES
          PLATFORMS=( ["EX4100"]="WDMyCloudEX4100" ["EX2100"]="WDMyCloudEX2100" ["DL4100"]="WDMyCloudDL4100" ["DL2100"]="WDMyCloudDL2100" ["MirrorG2"]="WDMyCloudMirror" ["Ex2Ultra"]="MyCloudEX2Ultra" ["PR4100"]="MyCloudPR4100" ["PR2100"]="MyCloudPR2100")
          PLATFORM="${PLATFORMS[$MODEL]}" 

          pkg=$(echo ${PACKAGE:-docker} | cut -d' ' -f1)
          echo ::set-output name=pkg::"$pkg"
          cd wdpk/${pkg}
          DATE="$(date +"%m%d%Y")"
          CWD="$(pwd)"
          VERSION="$(awk '/Version/{print $NF}' apkg.rc)"
          echo ::set-output name=version::"${VERSION}"
          NAME="$(awk '/AddonShowName/{print $NF}' apkg.rc)"
          echo ::set-output name=name::"${NAME}"
          DESCRIPTION="$(awk '/Description/{print $NF}' apkg.rc)"
          echo ::set-output name=description::"${DESCRIPTION}"

          echo "Building ${pkg} version ${VERSION}"
          echo "$(ls -l ../..)"
          RELEASE_DIR="../../packages/${pkg}/OS5"
          mkdir -p "${RELEASE_DIR}"

          echo "PLF ${PLATFORM} - $arr - ${PACKAGE}"
          echo "Build ${pkg} for $MODEL"
          ../../mksapkg-OS5 -E -s -m ${PLATFORM} > /dev/null
          mv ../${PLATFORM}*.bin\(* ../${pkg}_${VERSION}_${MODEL}.bin
          echo "$(ls -l ..)"

      - name: Publish packages to GH Releases
        id: push
        run: |
          gh release create ${{ steps.make_apkg.outputs.pkg }}-${{ steps.make_apkg.outputs.version }} \
            --generate-notes packages/${{ steps.make_apkg.outputs.pkg }}/OS5/*.bin
